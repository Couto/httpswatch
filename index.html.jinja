<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="description" content="HTTPSWatch tracks the HTTPS support of prominent websites.">
    <title>HTTPSWatch</title>
    <link rel="stylesheet" type="text/css" href="/static/main.css">
    <script type="text/javascript">
    (function () {
    function toggleOpen(e) {
        if (e.target.tagName === "A")
            return;
        this.parentNode.classList.toggle("details-open");
    }
    window.addEventListener("load", function onLoad() {
        var elms = document.getElementsByClassName("site-status-summary");
        for (var i = 0; i < elms.length; i++) {
            elms[i].addEventListener("click", toggleOpen);
        }
    })
    })();
    </script>
  </head>
  <body>
    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-342043-4', 'auto');
      ga('send', 'pageview');

    </script>

    <h1>HTTPSWatch</h1>
    <p>HTTPSWatch tracks the HTTPS support of prominent websites. Click to show details about a site&rsquo;s HTTPS support. See the <a href="#about">About section</a> for more information.

    <nav class="main-toc">
      <ul class="nav-list">
      {% for cat in data.categories %}
        <li><a href="#{{ cat.linkname }}">{{ cat.name|e }}</a>
      {% endfor %}
      </ul>
    </nav>

    {% for cat in data.categories %}
    <section id="{{ cat.linkname }}">
      <div class="cat-header">
        <h2 class="cat-name">{{ cat.name|e }}</h2>
        <a class="cat-name-link" title="Link to this category" href="#{{ cat.linkname }}">Â¶</a>
        <div class="cat-counts">
          <span class="site-grade-bad">{{ cat.counts.bad|default(0) }}</span>/<span class="site-grade-mediocre">{{ cat.counts.mediocre|default(0) }}</span>/<span class="site-grade-good">{{ cat.counts.good|default(0) }}</span>
        </div>
      </div>
      <div class="site-category">
        {% for site in cat.sites %}
        <div class="site-entry">
          <div class="site-status-summary">
            <span class="glyphicon site-details-expander"></span>
            <span class="site-name">{{ site.name|e }}</span>
            <span class="site-domain">(<a href="https://{{ site.domain }}">{{ site.domain }}</a>)</span>
            <span class="site-grade site-grade-{{ site.status }}">{{ site.status|title }}</span>
          </div>
          <div class="site-status-details">
            <ul class="site-check-list">
              {% for check in site.checks %}
              <li class="site-check-item">
                {% if check.icon == "bad" %}<span class="glyphicon glyphicon-ban-circle site-check-bad"></span>{% else %}<span class="glyphicon glyphicon-ok-circle site-check-good"></span>{% endif %}
                {{ check.description }}
                {% endfor %}
            </ul>
          </div>
        </div>
        {% endfor %}
      </div>
    </section>
    {% endfor %}

    <section id="about">
      <h2>About HTTPSWatch</h2>
      <p>HTTPSWatch was inspired by Alex Gaynor&rsquo;s <a href="https://alexgaynor.net/2014/nov/12/state-of-news-tls/">blog</a> <a href="https://alexgaynor.net/2014/dec/30/state-of-news-tls-part-ii/">posts</a> about news sites&rsquo; HTTPS support.
      <h3>Ratings</h3>
      <p>HTTPSWatch assigns every tracked site a rating approximating the quality of its HTTPS support. If a verified TLS connection cannot be established or no page can be loaded over TLS, the site is given the <span class="site-grade-bad">Bad</span> rating. The <span class="site-grade-mediocre">Mediocre</span> rating means a TLS connection can be established but there are quality issues with the site&rsquo;s implementation of HTTPS (e.g. the HTTP site doesn&rsquo;t redirect to HTTPS or the <code>Strict-Transport-Security</code> header isn&rsquo;t set). If everything looks good, a <span class="site-grade-good">Good</span> rating is given.
      <h3>Limitations</h3>  
      <p>Some sites which HTTPSWatch rates as <span class="site-grade-mediocre">Mediocre</span> are actually unusable in a browser. This is mostly due to <a href="https://developer.mozilla.org/en-US/docs/Security/MixedContent">mixed content</a>, which HTTPSWatch doesn&rsquo;t detect.
      <p>Aside from the basic hostname verification checks, HTTPSWatch doesn&rsquo;t attempt to evaluate the quality of the TLS connection. A link to the <a href="https://www.ssllabs.com/ssltest/">SSL Labs server TLS testing tool</a> is provided for each site.
      <h3>Site Curation</h3>
      <p>Obviously, it&rsquo;s not practical to list every university or news site in the world. HTTPSWatch&rsquo;s goal is to list several representative sites for each category. Usually these are the most popular sites, so HTTPS support on them affects the most users. The hope is that if the sites listed here have high quality HTTPS implementations, the others will follow. Each category should not exceed 20-30 sites.
      <h3>How to Properly Setup HTTPS</h3>
      <p>There&rsquo;s a lot of information on the web about this, which may be found by searching. The <a href="https://www.eff.org/https-everywhere/deploying-https">EFF&rsquo;s guide</a> is a good starting place. <a href="https://18f.gsa.gov/">18F</a> has information about their TLS deployment standards including reusable nginx configuration files <a href="https://github.com/18F/tls-standards">on GitHub</a>.
      <h3>Code</h3>
      <p>The code is available on <a href="https://github.com/gutworth/httpswatch">GitHub</a> and pull requests are welcome.
    </section>

    <footer>
      Created by <a href="http://www.benjamin-peterson.org">Benjamin Peterson</a>. Last updated <time>{{ update_time }}</time>.
    </footer>
  </body>
</html>
